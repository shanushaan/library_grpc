# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import library_service_pb2 as library__service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in library_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class LibraryServiceStub(object):
    """Service definition after all messages
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBooks = channel.unary_unary(
                '/library.LibraryService/GetBooks',
                request_serializer=library__service__pb2.GetBooksRequest.SerializeToString,
                response_deserializer=library__service__pb2.GetBooksResponse.FromString,
                _registered_method=True)
        self.GetBook = channel.unary_unary(
                '/library.LibraryService/GetBook',
                request_serializer=library__service__pb2.GetBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.Book.FromString,
                _registered_method=True)
        self.CreateBook = channel.unary_unary(
                '/library.LibraryService/CreateBook',
                request_serializer=library__service__pb2.CreateBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.BookResponse.FromString,
                _registered_method=True)
        self.UpdateBook = channel.unary_unary(
                '/library.LibraryService/UpdateBook',
                request_serializer=library__service__pb2.UpdateBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.BookResponse.FromString,
                _registered_method=True)
        self.DeleteBook = channel.unary_unary(
                '/library.LibraryService/DeleteBook',
                request_serializer=library__service__pb2.GetBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.BookResponse.FromString,
                _registered_method=True)
        self.AuthenticateUser = channel.unary_unary(
                '/library.LibraryService/AuthenticateUser',
                request_serializer=library__service__pb2.AuthRequest.SerializeToString,
                response_deserializer=library__service__pb2.AuthResponse.FromString,
                _registered_method=True)
        self.GetUsers = channel.unary_unary(
                '/library.LibraryService/GetUsers',
                request_serializer=library__service__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=library__service__pb2.GetUsersResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/library.LibraryService/CreateUser',
                request_serializer=library__service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=library__service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/library.LibraryService/UpdateUser',
                request_serializer=library__service__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=library__service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.IssueBook = channel.unary_unary(
                '/library.LibraryService/IssueBook',
                request_serializer=library__service__pb2.IssueBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.TransactionResponse.FromString,
                _registered_method=True)
        self.ReturnBook = channel.unary_unary(
                '/library.LibraryService/ReturnBook',
                request_serializer=library__service__pb2.ReturnBookRequest.SerializeToString,
                response_deserializer=library__service__pb2.TransactionResponse.FromString,
                _registered_method=True)
        self.GetTransactions = channel.unary_unary(
                '/library.LibraryService/GetTransactions',
                request_serializer=library__service__pb2.GetTransactionsRequest.SerializeToString,
                response_deserializer=library__service__pb2.GetTransactionsResponse.FromString,
                _registered_method=True)
        self.CreateUserBookRequest = channel.unary_unary(
                '/library.LibraryService/CreateUserBookRequest',
                request_serializer=library__service__pb2.CreateBookRequestReq.SerializeToString,
                response_deserializer=library__service__pb2.BookRequestResponse.FromString,
                _registered_method=True)
        self.GetBookRequests = channel.unary_unary(
                '/library.LibraryService/GetBookRequests',
                request_serializer=library__service__pb2.GetBookRequestsReq.SerializeToString,
                response_deserializer=library__service__pb2.GetBookRequestsResponse.FromString,
                _registered_method=True)
        self.ApproveBookRequest = channel.unary_unary(
                '/library.LibraryService/ApproveBookRequest',
                request_serializer=library__service__pb2.ApproveBookRequestReq.SerializeToString,
                response_deserializer=library__service__pb2.BookRequestResponse.FromString,
                _registered_method=True)
        self.RejectBookRequest = channel.unary_unary(
                '/library.LibraryService/RejectBookRequest',
                request_serializer=library__service__pb2.RejectBookRequestReq.SerializeToString,
                response_deserializer=library__service__pb2.BookRequestResponse.FromString,
                _registered_method=True)
        self.GetUserStats = channel.unary_unary(
                '/library.LibraryService/GetUserStats',
                request_serializer=library__service__pb2.UserStatsRequest.SerializeToString,
                response_deserializer=library__service__pb2.UserStatsResponse.FromString,
                _registered_method=True)
        self.GetUserTransactions = channel.unary_unary(
                '/library.LibraryService/GetUserTransactions',
                request_serializer=library__service__pb2.GetUserTransactionsRequest.SerializeToString,
                response_deserializer=library__service__pb2.GetUserTransactionsResponse.FromString,
                _registered_method=True)


class LibraryServiceServicer(object):
    """Service definition after all messages
    """

    def GetBooks(self, request, context):
        """Book operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateUser(self, request, context):
        """User operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueBook(self, request, context):
        """Transaction operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReturnBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserBookRequest(self, request, context):
        """Request operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBookRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApproveBookRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RejectBookRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserStats(self, request, context):
        """User dashboard operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibraryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBooks,
                    request_deserializer=library__service__pb2.GetBooksRequest.FromString,
                    response_serializer=library__service__pb2.GetBooksResponse.SerializeToString,
            ),
            'GetBook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBook,
                    request_deserializer=library__service__pb2.GetBookRequest.FromString,
                    response_serializer=library__service__pb2.Book.SerializeToString,
            ),
            'CreateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBook,
                    request_deserializer=library__service__pb2.CreateBookRequest.FromString,
                    response_serializer=library__service__pb2.BookResponse.SerializeToString,
            ),
            'UpdateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBook,
                    request_deserializer=library__service__pb2.UpdateBookRequest.FromString,
                    response_serializer=library__service__pb2.BookResponse.SerializeToString,
            ),
            'DeleteBook': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBook,
                    request_deserializer=library__service__pb2.GetBookRequest.FromString,
                    response_serializer=library__service__pb2.BookResponse.SerializeToString,
            ),
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=library__service__pb2.AuthRequest.FromString,
                    response_serializer=library__service__pb2.AuthResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=library__service__pb2.GetUsersRequest.FromString,
                    response_serializer=library__service__pb2.GetUsersResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=library__service__pb2.CreateUserRequest.FromString,
                    response_serializer=library__service__pb2.UserResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=library__service__pb2.UpdateUserRequest.FromString,
                    response_serializer=library__service__pb2.UserResponse.SerializeToString,
            ),
            'IssueBook': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueBook,
                    request_deserializer=library__service__pb2.IssueBookRequest.FromString,
                    response_serializer=library__service__pb2.TransactionResponse.SerializeToString,
            ),
            'ReturnBook': grpc.unary_unary_rpc_method_handler(
                    servicer.ReturnBook,
                    request_deserializer=library__service__pb2.ReturnBookRequest.FromString,
                    response_serializer=library__service__pb2.TransactionResponse.SerializeToString,
            ),
            'GetTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactions,
                    request_deserializer=library__service__pb2.GetTransactionsRequest.FromString,
                    response_serializer=library__service__pb2.GetTransactionsResponse.SerializeToString,
            ),
            'CreateUserBookRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserBookRequest,
                    request_deserializer=library__service__pb2.CreateBookRequestReq.FromString,
                    response_serializer=library__service__pb2.BookRequestResponse.SerializeToString,
            ),
            'GetBookRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBookRequests,
                    request_deserializer=library__service__pb2.GetBookRequestsReq.FromString,
                    response_serializer=library__service__pb2.GetBookRequestsResponse.SerializeToString,
            ),
            'ApproveBookRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.ApproveBookRequest,
                    request_deserializer=library__service__pb2.ApproveBookRequestReq.FromString,
                    response_serializer=library__service__pb2.BookRequestResponse.SerializeToString,
            ),
            'RejectBookRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.RejectBookRequest,
                    request_deserializer=library__service__pb2.RejectBookRequestReq.FromString,
                    response_serializer=library__service__pb2.BookRequestResponse.SerializeToString,
            ),
            'GetUserStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserStats,
                    request_deserializer=library__service__pb2.UserStatsRequest.FromString,
                    response_serializer=library__service__pb2.UserStatsResponse.SerializeToString,
            ),
            'GetUserTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserTransactions,
                    request_deserializer=library__service__pb2.GetUserTransactionsRequest.FromString,
                    response_serializer=library__service__pb2.GetUserTransactionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'library.LibraryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('library.LibraryService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LibraryService(object):
    """Service definition after all messages
    """

    @staticmethod
    def GetBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetBooks',
            library__service__pb2.GetBooksRequest.SerializeToString,
            library__service__pb2.GetBooksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetBook',
            library__service__pb2.GetBookRequest.SerializeToString,
            library__service__pb2.Book.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/CreateBook',
            library__service__pb2.CreateBookRequest.SerializeToString,
            library__service__pb2.BookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/UpdateBook',
            library__service__pb2.UpdateBookRequest.SerializeToString,
            library__service__pb2.BookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/DeleteBook',
            library__service__pb2.GetBookRequest.SerializeToString,
            library__service__pb2.BookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/AuthenticateUser',
            library__service__pb2.AuthRequest.SerializeToString,
            library__service__pb2.AuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetUsers',
            library__service__pb2.GetUsersRequest.SerializeToString,
            library__service__pb2.GetUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/CreateUser',
            library__service__pb2.CreateUserRequest.SerializeToString,
            library__service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/UpdateUser',
            library__service__pb2.UpdateUserRequest.SerializeToString,
            library__service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IssueBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/IssueBook',
            library__service__pb2.IssueBookRequest.SerializeToString,
            library__service__pb2.TransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReturnBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/ReturnBook',
            library__service__pb2.ReturnBookRequest.SerializeToString,
            library__service__pb2.TransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetTransactions',
            library__service__pb2.GetTransactionsRequest.SerializeToString,
            library__service__pb2.GetTransactionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUserBookRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/CreateUserBookRequest',
            library__service__pb2.CreateBookRequestReq.SerializeToString,
            library__service__pb2.BookRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBookRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetBookRequests',
            library__service__pb2.GetBookRequestsReq.SerializeToString,
            library__service__pb2.GetBookRequestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ApproveBookRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/ApproveBookRequest',
            library__service__pb2.ApproveBookRequestReq.SerializeToString,
            library__service__pb2.BookRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RejectBookRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/RejectBookRequest',
            library__service__pb2.RejectBookRequestReq.SerializeToString,
            library__service__pb2.BookRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetUserStats',
            library__service__pb2.UserStatsRequest.SerializeToString,
            library__service__pb2.UserStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.LibraryService/GetUserTransactions',
            library__service__pb2.GetUserTransactionsRequest.SerializeToString,
            library__service__pb2.GetUserTransactionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
